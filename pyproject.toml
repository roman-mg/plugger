[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "plugger"
version = "0.1.0"
description = "Modular runtime injector and test launcher"
authors = ["RMN <no-reply@mail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "plugger" }]

[tool.poe.tasks]
check = "poetry run ruff check ./ && poetry run black --check ./"
hard_check = "poetry run ruff check ./ && poetry run black --check ./ && poetry run mypy --config-file pyproject.toml ./"
format = "poetry run ruff format ./ && poetry run black --config pyproject.toml ./"
test = "poetry run pytest"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
pytest-env = "^1.1.5"
ruff = "^0.11.5"
black = "^25.1.0"
poethepoet = "^0.33.1"
mypy = "^1.15.0"

[tool.ruff]
select = []
ignore = []
exclude = [
    ".git",
    ".github",
    ".idea",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "venv",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.black]
target-version = ["py312"]
color = true
line-length = 120
exclude = '''
/(
    \.git
    | \.github
    | \.idea
    | \.mypy_cache
    | \.ruff_cache
    | \.venv
    | build
    | venv
)/
'''

[tool.mypy]
python_version = 3.12
color_output = true

[tool.pytest.ini_options]
env = []
norecursedirs = [
    ".git",
    ".github",
    ".idea",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "venv"
]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--doctest-modules",
    "--doctest-continue-on-failure"
]
